{"version":3,"sources":["components/Header.jsx","utils/openNotification.js","components/Label.jsx","components/Input.jsx","components/ErrorMessage.jsx","components/Link.jsx","views/Register.jsx"],"names":["Header","styled","h1","theme","colors","neutral","huge","subheader","openNotification","type","message","duration","store","addNotification","title","insert","container","animationIn","animationOut","dismiss","Label","label","Input","input","ErrorMessageStyled","div","secondary","props","Link","primary","Wrapper","BoundingBox","section","Grid","Flex","ButtonStyled","Button","LinkStyled","initialValues","email","password","passwordConfirm","firstName","lastName","phone","Yup","ref","test","name","exclusive","params","reference","path","value","this","resolve","validationSchema","required","min","equalTo","Register","useState","error","setError","loading","setLoading","history","useHistory","wholePage","onSubmit","values","a","async","axios","method","url","data","status","push","response","tryRegister","render","htmlFor","field","to"],"mappings":"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","file":"static/js/10.7895f52e.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Header = styled.h1`\n  color: ${({ theme }) => theme.colors.neutral[200]};\n  font-weight: 800;\n  font-size: ${({ huge, subheader }) => (subheader ? '28px' : huge ? '48px' : '36px')};\n  padding-bottom: 16px;\n  margin-bottom: 16px;\n`;\n\nexport default Header;\n","import { store } from \"react-notifications-component\";\n\nconst openNotification = (type, message, duration) => {\n  switch (type) {\n    case 'success':\n      return store.addNotification({\n        title: \"Udało się!\",\n        message,\n        type: \"success\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animated\", \"fadeInRight\"],\n        animationOut: [\"animated\", \"fadeOutRight\"],\n        dismiss: {\n          duration\n        }\n      });\n    case 'danger':\n      return store.addNotification({\n        title: \"Coś poszło nie tak :(\",\n        message,\n        type: \"danger\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animated\", \"fadeInRight\"],\n        animationOut: [\"animated\", \"fadeOutRight\"],\n        dismiss: {\n          duration\n        }\n      })\n  }\n};\n\nexport default openNotification;\n","import styled from 'styled-components';\n\nconst Label = styled.label`\n  color: ${({ theme }) => theme.colors.neutral[200]};\n  font-size: 15px;\n`;\n\nexport default Label;","import styled from 'styled-components';\n\nconst Input = styled.input`\n  width: 100%;\n  color: ${({ theme }) => theme.colors.neutral[400]};\n  font-weight: bold;\n  border: none;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.neutral[400]};\n  padding: 10px;\n  font-size: 16px;\n  margin: 10px 0;\n  background: transparent;\n`;\n\nexport default Input;","import React from 'react';\nimport { ErrorMessage } from 'formik';\nimport styled from 'styled-components';\n\nexport const ErrorMessageStyled = styled.div`\n  min-height: 16px;\n  margin-bottom: 10px;\n  font-size: 14px;\n  color: ${({ theme }) => theme.colors.secondary};\n`;\n\nexport default props => (\n  <ErrorMessageStyled>\n    <ErrorMessage {...props} />\n  </ErrorMessageStyled>\n);","import { Link } from \"react-router-dom\";\nimport styled from 'styled-components';\n\nexport default styled(Link)`\n  color: ${({ theme }) => theme.colors.primary};\n  text-decoration: none;\n  \n  &:link {\n    color: ${({ theme }) => theme.colors.primary};\n  }\n  &:visited {\n    color: ${({ theme }) => theme.colors.primary};\n  }\n  &:hover {\n    color: ${({ theme }) => theme.colors.secondary};\n    text-decoration: underline;\n    cursor: pointer;\n  }\n  &:active {\n    color: ${({ theme }) => theme.colors.secondary};\n  }\n`;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router-dom';\n\nimport axios from 'axios-instance';\nimport openNotification from 'utils/openNotification';\n\nimport Center from 'components/Center';\nimport Header from 'components/Header';\nimport { Field, Form, Formik } from \"formik\";\nimport Label from \"components/Label\";\nimport Input from \"components/Input\";\nimport ErrorMessage, { ErrorMessageStyled } from \"components/ErrorMessage\";\nimport Button from \"components/Button\";\nimport Link from 'components/Link';\nimport Spinner from \"components/Spinner\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n`;\nconst BoundingBox = styled.section`\n  width: 600px;\n`;\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 20px;\n`;\nconst Flex = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 28px;\n`;\nconst ButtonStyled = styled(Button)`\n  width: 256px;\n`;\nconst LinkStyled = styled(Link)`\n  margin-left: 5px;\n`;\n\nconst initialValues = {\n  email: '',\n  password: '',\n  passwordConfirm: '',\n  firstName: '',\n  lastName: '',\n  phone: ''\n};\n\nfunction equalTo(ref, message) {\n  return Yup.mixed().test({\n    name: 'equalTo',\n    exclusive: false,\n    message,\n    params: {\n      reference: ref.path,\n    },\n    test(value) {\n      return value === this.resolve(ref);\n    },\n  });\n}\n\nYup.addMethod(Yup.string, 'equalTo', equalTo);\n\nconst validationSchema = Yup.object({\n  email: Yup.string()\n    .email('Nieprawidłowy format.')\n    .required('Pole wymagane.'),\n  password: Yup.string()\n    .min(5, 'Hasło musi być przynajmniej 5 znakowe.')\n    .required('Pole wymagane.'),\n  passwordConfirm: Yup.string()\n    .equalTo(Yup.ref('password'), 'Hasła muszą być identyczne.')\n    .required('Pole wymagane.'),\n  firstName: Yup.string()\n    .required('Pole wymagane.'),\n  lastName: Yup.string()\n    .required('Pole wymagane.'),\n  phone: Yup.string()\n    .min(8, 'Sprawdź poprawność numeru telefonu.')\n    .required('Pole wymagane.'),\n});\n\nconst Register = () => {\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n\n  const tryRegister = async (values) => {\n    const { email, password, firstName, lastName, phone } = values;\n    setLoading(true);\n\n    try {\n      const response = await axios({\n        method: 'post',\n        url: 'users',\n        data: {\n          email, password, firstName, lastName, phone\n        }\n      });\n      if (response.status === 200) {\n        setLoading(false);\n        openNotification('success', 'Teraz możesz zalogować się na swoje konto.', 7000);\n        history.push('login/');\n      }\n    } catch (err) {\n      setError(err.response.data);\n      setLoading(false);\n    }\n  };\n\n  if (loading) return <Spinner wholePage/>;\n\n  return (\n    <Wrapper>\n      <Center>\n        <BoundingBox>\n          <Header>Zarejestruj się</Header>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={values => {\n              tryRegister(values);\n            }}\n            render={() => (\n              <Form>\n                <Label htmlFor=\"email\">E-mail</Label>\n                <Field name=\"email\">\n                  {({ field }) => <Input type=\"email\" {...field} />}\n                </Field>\n                <ErrorMessage name=\"email\"/>\n                <Label htmlFor=\"password\">Hasło</Label>\n                <Field name=\"password\">\n                  {({ field }) => <Input type=\"password\" {...field} />}\n                </Field>\n                <ErrorMessage name=\"password\"/>\n                <Label htmlFor=\"passwordConfirm\">Powtórz hasło</Label>\n                <Field name=\"passwordConfirm\">\n                  {({ field }) => <Input type=\"password\" {...field} />}\n                </Field>\n                <ErrorMessage name=\"passwordConfirm\"/>\n                <Grid>\n                  <div>\n                    <Label htmlFor=\"firstName\">Imię</Label>\n                    <Field name=\"firstName\">\n                      {({ field }) => <Input type=\"text\" {...field} />}\n                    </Field>\n                    <ErrorMessage name=\"firstName\"/>\n                  </div>\n                  <div>\n                    <Label htmlFor=\"lastName\">Nazwisko</Label>\n                    <Field name=\"lastName\">\n                      {({ field }) => <Input type=\"text\" {...field} />}\n                    </Field>\n                    <ErrorMessage name=\"lastName\"/>\n                  </div>\n                </Grid>\n                <Label htmlFor=\"phone\">Telefon</Label>\n                <Field name=\"phone\">\n                  {({ field }) => <Input type=\"tel\" {...field} />}\n                </Field>\n                <ErrorMessage name=\"phone\"/>\n                <Flex>\n                  <ButtonStyled type=\"submit\" primary>\n                    Zarejestruj konto\n                  </ButtonStyled>\n                </Flex>\n              </Form>\n            )}\n          />\n          {error && <ErrorMessageStyled>{error}</ErrorMessageStyled>}\n          <p>\n            Masz konto?\n            <LinkStyled to=\"/login\">Zaloguj się</LinkStyled>\n          </p>\n        </BoundingBox>\n      </Center>\n    </Wrapper>\n  )\n};\n\nexport default Register;"],"sourceRoot":""}