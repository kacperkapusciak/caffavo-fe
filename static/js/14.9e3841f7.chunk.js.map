{"version":3,"sources":["components/Header.jsx","components/Label.jsx","components/Workspace.jsx","components/Table.jsx","utils/formatDate.js","views/Finances.jsx"],"names":["Header","styled","h1","theme","colors","neutral","huge","subheader","Label","label","Layout","div","Details","white","Edit","background","Workspace","children","TableHeader","layout","TableRow","active","formatDate","date","newDate","Date","month","getMonth","getDate","getFullYear","OrderNumber","primary","Detail","last","bold","TransactionValue","value","success","black","danger","Finances","useState","finance","setFinance","bankDetails","setBankDetails","loading","setLoading","history","useHistory","useEffect","a","async","Promise","all","axios","get","financeData","bankDetailsData","data","map","el","key","transaction","id","createdAt","title","toFixed","orderId","onClick","push","balance","numberOfTransactions","numberOfIncomes","numberOfOutcomes"],"mappings":"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","file":"static/js/14.9e3841f7.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Header = styled.h1`\n  color: ${({ theme }) => theme.colors.neutral[200]};\n  font-weight: 800;\n  font-size: ${({ huge, subheader }) => (subheader ? '28px' : huge ? '48px' : '36px')};\n  padding-bottom: 16px;\n  margin-bottom: 16px;\n`;\n\nexport default Header;\n","import styled from 'styled-components';\n\nconst Label = styled.label`\n  color: ${({ theme }) => theme.colors.neutral[200]};\n  font-size: 15px;\n`;\n\nexport default Label;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Layout = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 375px;\n`;\nconst Details = styled.div`\n  background: ${({ theme }) => theme.colors.white};\n  padding: 48px 48px 0;\n  height: 100vh;\n  overflow: auto;\n`;\nconst Edit = styled.div`\n  background: ${({ theme }) => theme.colors.background[200]};\n  padding: 48px 40px;\n`;\nconst Workspace = ({ children }) => (\n  <Layout>\n    <Details>{children[0]}</Details>\n    <Edit>{children[1]}</Edit>\n  </Layout>\n);\n\nexport default Workspace;\n","import styled from 'styled-components';\n\nexport const TableHeader = styled.div`\n  display: grid;\n  grid-template-columns: ${({ layout }) => layout};\n  justify-content: center;\n  text-align: center;\n  font-size: 12px;\n  text-transform: uppercase;\n  font-weight: bold;\n  padding: 0 20px;\n  color: ${({ theme }) => theme.colors.neutral[400]};\n`;\n\nexport const TableRow = styled.div`\n  display: grid;\n  grid-template-columns: ${({ layout }) => layout};\n  align-items: center;\n  background: ${({ theme }) => theme.colors.white};\n  border: 1px solid transparent;\n  border-radius: 5px;\n  transition: all 0.2s ease-in-out;\n  padding: 20px 12px;\n  margin: 8px 0;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.25), 0 2px 2px rgba(0, 0, 0, 0.22);\n  transform: ${({ active }) => active ? 'scale(1.025)' : 'scale(1)'};\n  user-select: none;\n\n  &:hover {\n    transform: scale(1.05);\n    cursor: pointer;\n  }\n  &:active {\n    transform: scale(1.035);\n  }\n`;\n","const formatDate = date => {\n  const newDate = new Date(date);\n  const month = newDate.getMonth() + 1 < 10 ? `0${newDate.getMonth() + 1}` : newDate.getMonth();\n  return `${newDate.getDate()}.${month}.${newDate.getFullYear()} r.`;\n};\n\nexport default formatDate;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios-instance';\nimport { useHistory } from 'react-router-dom';\n\nimport formatDate from \"utils/formatDate\";\n\nimport Workspace from 'components/Workspace';\nimport Header from \"components/Header\";\nimport { TableHeader, TableRow } from 'components/Table';\nimport Spinner from \"components/Spinner\";\nimport Label from 'components/Label';\n\nconst OrderNumber = styled.div`\n  color: ${({ theme }) => theme.colors.primary};\n  text-align: center;\n  \n  &:hover {\n    text-decoration: underline;\n  }\n`;\nconst Detail = styled.div`\n  color: ${({ theme }) => theme.colors.neutral[400]};\n  margin: ${({ last }) => last ? '8px 0 26px' : '8px 0 15px'};\n  font-weight: ${({ bold }) => bold ? 'bold' : 'normal'};\n  font-size: ${({ bold }) => bold ? '25px' : '17px'}\n`;\n\nconst TransactionValue = styled.div`\n  color: ${({ theme, value }) => value > 0 ? theme.colors.success : value === 0 ? theme.colors.black : theme.colors.danger};\n`;\n\nconst Finances = () => {\n  const [finance, setFinance] = useState();\n  const [bankDetails, setBankDetails] = useState({});\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n\n\n  useEffect(() => {\n    (async () => {\n      const [financeData, bankDetailsData] = await Promise.all([\n        axios.get('/finance'),\n        axios.get('/finance/bankdetails')\n      ]);\n\n      if (financeData && bankDetailsData) {\n        setFinance(financeData.data);\n        setBankDetails(bankDetailsData.data);\n      }\n      setLoading(false);\n    })();\n  }, []);\n\n  const layout = \"85px 200px 1fr 200px 70px\";\n  const transactionColumns = ['transakcja', 'data', 'tytuł', 'wartość', 'zamówienie'];\n\n  return (\n    <Workspace>\n      <section>\n        <Header huge>Transakcje</Header>\n        <TableHeader layout={layout}>\n          {transactionColumns.map(el => <div key={el}>{el}</div>)}\n        </TableHeader>\n        {loading ? <Spinner/> : (\n          finance.map(transaction => (\n            <TableRow\n              key={`orders-${transaction.id}`}\n              layout={layout}\n            >\n              <div>{transaction.id}</div>\n              <div>{formatDate(transaction.createdAt)}</div>\n              <div>{transaction.title}</div>\n              <TransactionValue value={transaction.value}>{transaction.value.toFixed(2)}</TransactionValue>\n              {transaction.orderId && (\n                <OrderNumber\n                  onClick={() => history.push(`/orders/${transaction.orderId}`)}\n                >\n                  {`#${transaction.orderId}`}\n                </OrderNumber>\n              )}\n            </TableRow>\n          ))\n        )}\n      </section>\n      <section>\n        <Header>Szczegóły</Header>\n        {loading ? <Spinner/> : (\n          <>\n            <Label>Stan konta</Label>\n            <Detail bold>{`${bankDetails.balance} zł`}</Detail>\n            <Label>Liczba transakcji</Label>\n            <Detail>{bankDetails.numberOfTransactions}</Detail>\n            <Label>Liczba wpływów</Label>\n            <Detail>{bankDetails.numberOfIncomes}</Detail>\n            <Label>Liczba wydatków</Label>\n            <Detail>{bankDetails.numberOfOutcomes}</Detail>\n          </>\n        )}\n      </section>\n    </Workspace>\n  )\n};\n\nexport default Finances;"],"sourceRoot":""}