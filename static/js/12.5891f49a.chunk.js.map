{"version":3,"sources":["components/Header.jsx","components/Label.jsx","utils/openNotification.js","components/Input.jsx","components/ErrorMessage.jsx","components/Link.jsx","views/Login.jsx"],"names":["Header","styled","h1","theme","colors","neutral","huge","subheader","Label","label","openNotification","type","message","duration","store","addNotification","title","insert","container","animationIn","animationOut","dismiss","Input","input","ErrorMessageStyled","div","secondary","props","Link","primary","Wrapper","BoundingBox","section","Flex","ButtonStyled","Button","LinkStyled","validationSchema","Yup","email","required","password","min","withAuth","auth","useState","error","setError","loading","setLoading","wholePage","initialValues","onSubmit","values","a","async","axios","method","url","data","response","status","id","admin","login","tryLogin","render","htmlFor","name","field","to"],"mappings":"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","file":"static/js/12.5891f49a.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Header = styled.h1`\n  color: ${({ theme }) => theme.colors.neutral[200]};\n  font-weight: 800;\n  font-size: ${({ huge, subheader }) => (subheader ? '28px' : huge ? '48px' : '36px')};\n  padding-bottom: 16px;\n  margin-bottom: 16px;\n`;\n\nexport default Header;\n","import styled from 'styled-components';\n\nconst Label = styled.label`\n  color: ${({ theme }) => theme.colors.neutral[200]};\n  font-size: 15px;\n`;\n\nexport default Label;","import { store } from \"react-notifications-component\";\n\nconst openNotification = (type, message, duration) => {\n  switch (type) {\n    case 'success':\n      return store.addNotification({\n        title: \"Udało się!\",\n        message,\n        type: \"success\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animated\", \"fadeInRight\"],\n        animationOut: [\"animated\", \"fadeOutRight\"],\n        dismiss: {\n          duration\n        }\n      });\n    case 'danger':\n      return store.addNotification({\n        title: \"Coś poszło nie tak :(\",\n        message,\n        type: \"danger\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animated\", \"fadeInRight\"],\n        animationOut: [\"animated\", \"fadeOutRight\"],\n        dismiss: {\n          duration\n        }\n      })\n  }\n};\n\nexport default openNotification;\n","import styled from 'styled-components';\n\nconst Input = styled.input`\n  width: 100%;\n  color: ${({ theme }) => theme.colors.neutral[400]};\n  font-weight: bold;\n  border: none;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.neutral[400]};\n  padding: 10px;\n  font-size: 16px;\n  margin: 10px 0;\n  background: transparent;\n  \n  &:disabled {\n   cursor: not-allowed;\n  }\n`;\n\nexport default Input;","import React from 'react';\nimport { ErrorMessage } from 'formik';\nimport styled from 'styled-components';\n\nexport const ErrorMessageStyled = styled.div`\n  min-height: 16px;\n  margin-bottom: 10px;\n  font-size: 14px;\n  color: ${({ theme }) => theme.colors.secondary};\n`;\n\nexport default props => (\n  <ErrorMessageStyled>\n    <ErrorMessage {...props} />\n  </ErrorMessageStyled>\n);","import { Link } from \"react-router-dom\";\nimport styled from 'styled-components';\n\nexport default styled(Link)`\n  color: ${({ theme }) => theme.colors.primary};\n  text-decoration: none;\n  \n  &:link {\n    color: ${({ theme }) => theme.colors.primary};\n  }\n  &:visited {\n    color: ${({ theme }) => theme.colors.primary};\n  }\n  &:hover {\n    color: ${({ theme }) => theme.colors.secondary};\n    text-decoration: underline;\n    cursor: pointer;\n  }\n  &:active {\n    color: ${({ theme }) => theme.colors.secondary};\n  }\n`;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Field, Form, Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { withAuth } from 'providers/AuthProvider';\nimport axios from 'axios-instance';\nimport openNotification from 'utils/openNotification';\n\nimport Center from 'components/Center';\nimport Label from 'components/Label';\nimport Input from 'components/Input';\nimport Button from 'components/Button';\nimport Header from 'components/Header';\nimport ErrorMessage, { ErrorMessageStyled } from 'components/ErrorMessage';\nimport Link from 'components/Link';\nimport Spinner from 'components/Spinner';\n\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n`;\nconst BoundingBox = styled.section`\n  width: 600px;\n`;\nconst Flex = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 28px;\n`;\nconst ButtonStyled = styled(Button)`\n  width: 256px;\n`;\nconst LinkStyled = styled(Link)`\n  margin-left: 5px;\n`;\n\nconst validationSchema = Yup.object({\n  email: Yup.string()\n    .email('Nieprawidłowy format.')\n    .required('Pole wymagane.'),\n  password: Yup.string()\n    .min(5, 'Hasło musi być przynajmniej 5 znakowe.')\n    .required('Pole wymagane.'),\n});\n\nconst Login = ({ auth }) => {\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const tryLogin = async ({ email, password }) => {\n    setLoading(true);\n    try {\n      const response = await axios({\n        method: 'post',\n        url: 'auth',\n        data: {\n          email,\n          password\n        }\n      });\n      if (response.status === 200) {\n        setLoading(false);\n        const { id, admin } = response.data;\n        auth.login(id, admin);\n        openNotification('success', 'Zalogowano na konto.', 5000);\n      }\n    } catch (err) {\n      setLoading(false);\n      setError(err);\n    }\n  };\n\n  if (loading) return <Spinner wholePage/>;\n\n  return (\n    <Wrapper>\n      <Center>\n        <BoundingBox>\n          <Header>Zaloguj się</Header>\n          <Formik\n            initialValues={{ email: '', password: '' }}\n            validationSchema={validationSchema}\n            onSubmit={values => {\n              tryLogin(values);\n            }}\n            render={() => (\n              <Form>\n                <Label htmlFor=\"email\">E-mail</Label>\n                <Field name=\"email\">\n                  {({ field }) => <Input type=\"email\" {...field} />}\n                </Field>\n                <ErrorMessage name=\"email\"/>\n                <Label htmlFor=\"password\">Hasło</Label>\n                <Field name=\"password\">\n                  {({ field }) => <Input type=\"password\" {...field} />}\n                </Field>\n                <ErrorMessage name=\"password\"/>\n                <Flex>\n                  <ButtonStyled type=\"submit\" primary>\n                    Zaloguj się\n                  </ButtonStyled>\n                </Flex>\n              </Form>\n            )}\n          />\n          {error && <ErrorMessageStyled>Błędny email lub hasło.</ErrorMessageStyled>}\n          <p>\n            Nie masz konta?\n            <LinkStyled to=\"/register\">Zarejestruj się</LinkStyled>\n          </p>\n        </BoundingBox>\n      </Center>\n    </Wrapper>\n  )\n};\n\nexport default withAuth(Login);"],"sourceRoot":""}